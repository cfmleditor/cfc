{
	"name": "cflsp",
	"description": "ColdFusion syntax error checker",
	"author": "David Rogers",
	"license": "MIT",
	"version": "1.0.32",
	"publisher": "DavidRogers",
	"categories": [],
	"repository": {
		"type": "git",
		"url": "https://github.com/softwareCobbler/cfc.git"
	},
	"keywords": [
		"ColdFusion"
	],
	"engines": {
		"vscode": "^1.43.0"
	},
	"activationEvents": [
		"onLanguage:cfml"
	],
	"main": "./out/cflsp.js",
	"files": [
		"out/vscode-adapter.js",
		"out/cfls-service.js",
		"out/lib.cf2018.d.cfm"
	],
	"contributes": {
		"languages": [
			{
				"id": "cfml",
				"extensions": [".cfm", ".cfc", ".cfml"],
				"aliases": ["ColdFusion", "CFML"],
				"filenames": [],
				"configuration": "./language-configuration.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "cflsp",
			"properties": {
				"cflsp.x_parseTypes": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "experimental: parse typedefs and types in comments; use `@!type <type>`, `@!typedef <typename> = <type>` and `@!interface <name> { <interface-members> }`"
				},
				"cflsp.x_checkReturnTypes": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "experimental: check return types of functions against function signatures"
				},
				"cflsp.x_genericFunctionInference": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "experimental: run inference on generic function signatures (intended use is library functions like Array.map and friends)"
				},
				"cflsp.engineVersion": {
					"scope": "resource",
					"type": "string",
					"description": "Which ColdFusion language version to use",
					"enum": [
						"acf.2018",
						"acf.2021",
						"lucee.5"
					],
					"default": "lucee.5",
					"enumDescriptions": [
						"Adobe 2018",
						"Adobe 2021",
						"Lucee 5"
					],
					"items": ["Adobe/2018", "Adobe/2021", "Lucee/5"]
				},
				"cflsp.wireboxResolution": {
					"scope": "resource",
					"type": "boolean",
					"description": "Enable experimental resolution of CFCs via Wirebox's `getInstance`.",
					"default": false
				},
				"cflsp.wireboxConfigFile": {
					"scope": "resource",
					"type": "string",
					"description": "Project-relative path to the Wirebox config file.",
					"default": "config/Wirebox.cfc"
				}
			}
		}
	},
	"scripts": {
	},
	"devDependencies": {
		"@types/mocha": "^8.0.3",
		"@types/node": "^12.12.0",
		"@typescript-eslint/parser": "^2.3.0",
		"eslint": "^6.4.0",
		"mocha": "^8.1.1",
		"typescript": "^4.2.2"
	}
}
